/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.acilab.stream.processor.wikilinks.serialization;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** This schema is defined for WikiLinks article events */
@org.apache.avro.specific.AvroGenerated
public class WikiLinksArticleEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 697823196723900120L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WikiLinksArticleEvent\",\"namespace\":\"net.acilab.stream.processor.wikilinks.serialization\",\"doc\":\"This schema is defined for WikiLinks article events\",\"fields\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"Mentions\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"Mention\",\"fields\":[{\"name\":\"mentionstring\",\"type\":\"string\"},{\"name\":\"byteoffset\",\"type\":\"long\"},{\"name\":\"targeturl\",\"type\":\"string\"}]}]}},{\"name\":\"Tokens\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"Token\",\"fields\":[{\"name\":\"tokenstring\",\"type\":\"string\"},{\"name\":\"byteoffset\",\"type\":\"long\"}]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<WikiLinksArticleEvent> ENCODER =
      new BinaryMessageEncoder<WikiLinksArticleEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WikiLinksArticleEvent> DECODER =
      new BinaryMessageDecoder<WikiLinksArticleEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<WikiLinksArticleEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<WikiLinksArticleEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<WikiLinksArticleEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<WikiLinksArticleEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this WikiLinksArticleEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a WikiLinksArticleEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a WikiLinksArticleEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static WikiLinksArticleEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence url;
  @Deprecated public java.util.List<java.lang.Object> Mentions;
  @Deprecated public java.util.List<java.lang.Object> Tokens;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WikiLinksArticleEvent() {}

  /**
   * All-args constructor.
   * @param url The new value for url
   * @param Mentions The new value for Mentions
   * @param Tokens The new value for Tokens
   */
  public WikiLinksArticleEvent(java.lang.CharSequence url, java.util.List<java.lang.Object> Mentions, java.util.List<java.lang.Object> Tokens) {
    this.url = url;
    this.Mentions = Mentions;
    this.Tokens = Tokens;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return url;
    case 1: return Mentions;
    case 2: return Tokens;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: url = (java.lang.CharSequence)value$; break;
    case 1: Mentions = (java.util.List<java.lang.Object>)value$; break;
    case 2: Tokens = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }


  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'Mentions' field.
   * @return The value of the 'Mentions' field.
   */
  public java.util.List<java.lang.Object> getMentions() {
    return Mentions;
  }


  /**
   * Sets the value of the 'Mentions' field.
   * @param value the value to set.
   */
  public void setMentions(java.util.List<java.lang.Object> value) {
    this.Mentions = value;
  }

  /**
   * Gets the value of the 'Tokens' field.
   * @return The value of the 'Tokens' field.
   */
  public java.util.List<java.lang.Object> getTokens() {
    return Tokens;
  }


  /**
   * Sets the value of the 'Tokens' field.
   * @param value the value to set.
   */
  public void setTokens(java.util.List<java.lang.Object> value) {
    this.Tokens = value;
  }

  /**
   * Creates a new WikiLinksArticleEvent RecordBuilder.
   * @return A new WikiLinksArticleEvent RecordBuilder
   */
  public static net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder newBuilder() {
    return new net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder();
  }

  /**
   * Creates a new WikiLinksArticleEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WikiLinksArticleEvent RecordBuilder
   */
  public static net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder newBuilder(net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder other) {
    if (other == null) {
      return new net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder();
    } else {
      return new net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder(other);
    }
  }

  /**
   * Creates a new WikiLinksArticleEvent RecordBuilder by copying an existing WikiLinksArticleEvent instance.
   * @param other The existing instance to copy.
   * @return A new WikiLinksArticleEvent RecordBuilder
   */
  public static net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder newBuilder(net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent other) {
    if (other == null) {
      return new net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder();
    } else {
      return new net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for WikiLinksArticleEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WikiLinksArticleEvent>
    implements org.apache.avro.data.RecordBuilder<WikiLinksArticleEvent> {

    private java.lang.CharSequence url;
    private java.util.List<java.lang.Object> Mentions;
    private java.util.List<java.lang.Object> Tokens;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.Mentions)) {
        this.Mentions = data().deepCopy(fields()[1].schema(), other.Mentions);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.Tokens)) {
        this.Tokens = data().deepCopy(fields()[2].schema(), other.Tokens);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing WikiLinksArticleEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.url)) {
        this.url = data().deepCopy(fields()[0].schema(), other.url);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Mentions)) {
        this.Mentions = data().deepCopy(fields()[1].schema(), other.Mentions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Tokens)) {
        this.Tokens = data().deepCopy(fields()[2].schema(), other.Tokens);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public java.lang.CharSequence getUrl() {
      return url;
    }


    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.url = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder clearUrl() {
      url = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Mentions' field.
      * @return The value.
      */
    public java.util.List<java.lang.Object> getMentions() {
      return Mentions;
    }


    /**
      * Sets the value of the 'Mentions' field.
      * @param value The value of 'Mentions'.
      * @return This builder.
      */
    public net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder setMentions(java.util.List<java.lang.Object> value) {
      validate(fields()[1], value);
      this.Mentions = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Mentions' field has been set.
      * @return True if the 'Mentions' field has been set, false otherwise.
      */
    public boolean hasMentions() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Mentions' field.
      * @return This builder.
      */
    public net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder clearMentions() {
      Mentions = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Tokens' field.
      * @return The value.
      */
    public java.util.List<java.lang.Object> getTokens() {
      return Tokens;
    }


    /**
      * Sets the value of the 'Tokens' field.
      * @param value The value of 'Tokens'.
      * @return This builder.
      */
    public net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder setTokens(java.util.List<java.lang.Object> value) {
      validate(fields()[2], value);
      this.Tokens = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Tokens' field has been set.
      * @return True if the 'Tokens' field has been set, false otherwise.
      */
    public boolean hasTokens() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Tokens' field.
      * @return This builder.
      */
    public net.acilab.stream.processor.wikilinks.serialization.WikiLinksArticleEvent.Builder clearTokens() {
      Tokens = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WikiLinksArticleEvent build() {
      try {
        WikiLinksArticleEvent record = new WikiLinksArticleEvent();
        record.url = fieldSetFlags()[0] ? this.url : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Mentions = fieldSetFlags()[1] ? this.Mentions : (java.util.List<java.lang.Object>) defaultValue(fields()[1]);
        record.Tokens = fieldSetFlags()[2] ? this.Tokens : (java.util.List<java.lang.Object>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WikiLinksArticleEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<WikiLinksArticleEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WikiLinksArticleEvent>
    READER$ = (org.apache.avro.io.DatumReader<WikiLinksArticleEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










